name: Deployment
on:
  push:
    branches:
      - master
    tags:
      - '**'
  schedule:
  - cron: '0 21 * * *'
env:
  NAME: 'My action'
jobs:
  generate-a-secret-output:
    strategy:
      matrix:
        version: [10 ]
        os: [ubuntu-22.04]
    runs-on: ${{matrix.os}}
    timeout-minutes: 5
    steps:
      - id: sets-a-secret
        name: Generate, mask and output a secret
        run: |
          the_secret=$((RANDOM))
          echo "::add-mask::$the_secret"
          echo "secret-number=$the_secret" >> "$GITHUB_OUTPUT"
      - name: Use that secret output
        run: |
          echo "The secret number is ${{ steps.sets-a-secret.outputs.secret-number }}"
          echo "${{ github.event_name }}"
          echo "${{ toJson(github.event) }}"
  lint:
    runs-on: ubuntu-latest
    env:
      NAME: 'My Action 2'
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Load and cache dependencies
        id: cache-deps
        uses: ./.github/actions/cached-deps
        with:
          caching: 'false'
      - name: Output info
        run: echo "Cache used? ${{ steps.cache-deps.outputs.used-cache }}"
      - name: Lint code
        run: npm run lint
  test:
    runs-on: ubuntu-latest
    outputs:
      tests-passed: ${{ steps.run-tests.outcome == 'success' }}
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Load and cache dependencies
        uses: ./.github/actions/cached-deps
      - name: Test code
        id: run-tests
        run: |
          echo "::group::Running Tests"
          npm run test
          echo "::endgroup::"
      - name: Upload test report
        if: failure() && steps.run-tests.outcome == 'failure'
        uses: actions/upload-artifact@v4
        with:
          name: test-report
          path: test.json
  call-build:
    needs: test
    uses: ./.github/workflows/build.yml
    with:
      test-job: "${{ needs.test.outputs.tests-passed }}"
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Get build artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist-files
          path: ./dist
      - name: Output contents
        run: ls
      - name: Deploy site
        id: deploy
        uses: ./.github/actions/deploy-s3-javascript
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        with:
          bucket: gha-custom-action-hosting-sara-domi
          dist-folder: ./dist
          bucket-region: eu-north-1
      - name: Output Information
        run: |
          echo "Live URL: ${{ steps.deploy.outputs.website-url }}"